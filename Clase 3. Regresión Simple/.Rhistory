pgorro <- c()
muestra<- c(100,1000, 10000,100000)
for(n in 1:4){
for(i in 1:10000){
X <- rbinom(1, n, 1/2)
# Estimador para p. \hat{p}=X/n
pgorro[i] <- X/n
}
plot(density(pgorro))
}
muestra<- c(100,1000, 10000,100000)
for(n in 1:4){
pgorro <- c()
for(i in 1:10000){
X <- rbinom(1, n, 1/2)
# Estimador para p. \hat{p}=X/n
pgorro[i] <- X/n
}
plot(density(pgorro))
}
muestra[1]
muestra[2]
muestra[3]
muestra<- c(100,1000, 10000,100000)
for(n in 1:4){
pgorro <- c()
for(i in 1:10000){
X <- rbinom(1, muestra[n], 1/2)
# Estimador para p. \hat{p}=X/n
pgorro[i] <- X/n
}
plot(density(pgorro))
}
muestra<- c(100,1000, 10000,100000)
for(n in 1:4){
pgorro <- c()
for(i in 1:10000){
X <- rbinom(1, muestra[n], 1/2)
# Estimador para p. \hat{p}=X/n
pgorro[i] <- X/n
}
hist(pgorro)
}
n<- 100
X <- rbinom(1, n, 1/2)
X
X/n
muestra<- c(100,1000, 10000,100000)
for(n in 1:4){
pgorro <- c()
for(i in 1:10000){
X <- rbinom(1, muestra[n], 1/2)
# Estimador para p. \hat{p}=X/n
pgorro[i] <- X/muestra[n]
}
hist(pgorro)
}
par(mfrow=c(2,2))
muestra<- c(100,1000, 10000,100000)
for(n in 1:4){
pgorro <- c()
for(i in 1:10000){
X <- rbinom(1, muestra[n], 1/2)
# Estimador para p. \hat{p}=X/n
pgorro[i] <- X/muestra[n]
}
plot(density(pgorro))
}
2*pnorm(6, lower.tail=F)
pt(0.904, df=9, lower.tail= F)
alpha <- 0.05
## población X
n <- 100
Xbarra <- 72
S2x <- 20
## población Y
m <- 120
Ybarra <- 76
S2y <- 15
# Cálculo de $S^2_p$
S2p <- ((n-1)*S2x+(m-1)*S2y)/(n+m-2)
Sp <- sqrt(S2p)
# Cálculo de $T_{est}$
Test <- (Xbarra-Ybarra)/(Sp*sqrt(1/m+1/n))
Test
# Cálculo de $T_{est}$
Test <- (Xbarra-Ybarra)/(Sp*sqrt((1/m)+(1/n)))
Test
#cálculo del p-valor
p.valor <- pt(Test, df = n+m-2, lower.tail = F)
alpha <- 0.05
alpha <- 0.05
## población X
n <- 100
Xbarra <- 72
S2x <- 20
## población Y
m <- 120
Ybarra <- 76
S2y <- 15
# Cálculo de $S^2_p$
S2p <- ((n-1)*S2x+(m-1)*S2y)/(n+m-2)
Sp <- sqrt(S2p)
# Cálculo de $T_{est}$
Test <- (Xbarra-Ybarra)/(Sp*sqrt((1/m)+(1/n)))
#cálculo del p-valor
p.valor <- pt(Test, df = n+m-2, lower.tail = T)
if(p.valor < alpha){
print("Se rechaza H_0 con significancia del 5%")
} else
print("No se rechaza H_0 con significancia del 5%")
if(p.valor < alpha){
print("Se rechaza H_0 con significancia del 5%")
print("El p-valor es", p.valor)
} else
print("Se rechaza H_0 con significancia del 5%") &
print("El p-valor es", p.valor)
print("Se rechaza H_0 con significancia del 5%") &
print(paste("El p-valor es", p.valor))
((px-py)-0.1)/sqrt((px*(1-px)/1000)+(py*(1-py)/2000))
px <- 0.623
py <- 0.512
((px-py)-0.1)/sqrt((px*(1-px)/1000)+(py*(1-py)/2000))
Zest <- ((px-py)-0.1)/sqrt((px*(1-px)/1000)+(py*(1-py)/2000))
px <- 0.623
py <- 0.512
Zest <- ((px-py)-0.1)/sqrt((px*(1-px)/1000)+(py*(1-py)/2000))
Zest
pnorm(Zest, lower.tail = F)
2*4pnorm(Zest, lower.tail = F)
2*pnorm(Zest, lower.tail = F)
qf(0.025, df1= 19,df2=29, lower.tail = F)
qf(0.025, df1= 19,df2=29, lower.tail = T)
##############################################
##############################################
##### PRUEBA DE HIPÓTESIS PARA VARIANZA ######
# generamos la muestra
muestra <- rnorm(50, mean=65, sd= 10)
muestra
#
S2<- sd(muestra)
S2
rm(list=ls())
# Parámetros generales
sigma2H0 <- 8
alpha <- 0.01
n <- 50
# generamos la muestra
muestra <- rnorm(n, mean=65, sd= sqrt(10))
muestra
# Desviación muestral
S2 <- sd(muestra)
S2
# Estadístico de prueba
chiest <- (n-1)*S2/sigma2H0
chiest
## Regla de decisión
#CHI ~ chi^2_{n-1}
#p-valor = 2*min{P(CHI>chiest),P(CHI<chiest)}
pval<- 2*min(c(pchisq(chiest, df=n-1, lower.tail = F), #derecha
pchisq(chiest, df=n-1, lower.tail = T))) #izquierda
pval
## Regla de decisión
#CHI ~ chi^2_{n-1}
#p-valor = 2*min{P(CHI>chiest),P(CHI<chiest)}
pval<- 2*min(pchisq(chiest, df=n-1, lower.tail = F), #derecha
pchisq(chiest, df=n-1, lower.tail = T)) #izquierda
pval
rm(pval)
## Regla de decisión
#CHI ~ chi^2_{n-1}
#p-valor = 2*min{P(CHI>chiest),P(CHI<chiest)}
pval<- 2*min(pchisq(chiest, df=n-1, lower.tail = F), #derecha
pchisq(chiest, df=n-1, lower.tail = T)) #izquierda
pval
x<- c(2,4,6,8)
x
#Regla de decisión
if(pval<alpha){
print(paste("Se rechaza H0 con significancia del",alpha))
} else print("No se rechaza H0")
##############################################
##############################################
##### PRUEBA DE HIPÓTESIS PARA VARIANZA ######
# se quiere probar H0:sigma^2=8 vs H1:sigma^2 \neq 8
# Parámetros generales
sigma2H0 <- 8
alpha <- 0.05
n <- 50
# generamos la muestra
muestra <- rnorm(n, mean=65, sd= sqrt(10))
# Desviación muestral
S2 <- sd(muestra)
# Estadístico de prueba
chiest <- (n-1)*S2/sigma2H0
## Regla de decisión
#CHI ~ chi^2_{n-1}
#p-valor = 2*min{P(CHI>chiest),P(CHI<chiest)}
pval<- 2*min(pchisq(chiest, df=n-1, lower.tail = F), #derecha
pchisq(chiest, df=n-1, lower.tail = T)) #izquierda
#Regla de decisión
if(pval<alpha){
print(paste("Se rechaza H0 con significancia del",alpha))
} else print("No se rechaza H0")
print(paste("Se rechaza H0 con significancia del",100*alpha,"%"))
print(paste("Se rechaza H0 con significancia del",100*alpha,"%"))
print(paste0("Se rechaza H0 con significancia del ",100*alpha,"%"))
##############################################
##############################################
##### PRUEBA DE HIPÓTESIS PARA VARIANZA ######
# se quiere probar H0:sigma^2=8 vs H1:sigma^2 \neq 8
# Parámetros generales
sigma2H0 <- 8
alpha <- 0.05
n <- 50
# generamos la muestra
muestra <- rnorm(n, mean=65, sd= sqrt(10))
# Desviación muestral
S2 <- sd(muestra)
# Estadístico de prueba
chiest <- (n-1)*S2/sigma2H0
## Regla de decisión
#CHI ~ chi^2_{n-1}
#p-valor = 2*min{P(CHI>chiest),P(CHI<chiest)}
pval<- 2*min(pchisq(chiest, df=n-1, lower.tail = F), #derecha
pchisq(chiest, df=n-1, lower.tail = T)) #izquierda
#Regla de decisión
if(pval<alpha){
print(paste0("Se rechaza H0 con significancia del ",100*alpha,"%"))
} else print("No se rechaza H0")
##############################################
##############################################
##### PRUEBA DE HIPÓTESIS PARA VARIANZA ######
# se quiere probar H0:sigma^2=8 vs H1:sigma^2 \neq 8
# Parámetros generales
sigma2H0 <- 8
alpha <- 0.1
n <- 50
# generamos la muestra
muestra <- rnorm(n, mean=65, sd= sqrt(10))
# Desviación muestral
S2 <- sd(muestra)
# Estadístico de prueba
chiest <- (n-1)*S2/sigma2H0
## Regla de decisión
#CHI ~ chi^2_{n-1}
#p-valor = 2*min{P(CHI>chiest),P(CHI<chiest)}
pval<- 2*min(pchisq(chiest, df=n-1, lower.tail = F), #derecha
pchisq(chiest, df=n-1, lower.tail = T)) #izquierda
#Regla de decisión
if(pval<alpha){
print(paste0("Se rechaza H0 con significancia del ",100*alpha,"%"))
} else print("No se rechaza H0")
##############################################
##############################################
##### PRUEBA DE HIPÓTESIS PARA VARIANZA ######
# se quiere probar H0:sigma^2=8 vs H1:sigma^2 \neq 8
# Parámetros generales
sigma2H0 <- 9
alpha <- 0.1
n <- 50
# generamos la muestra
muestra <- rnorm(n, mean=65, sd= sqrt(10))
# Desviación muestral
S2 <- sd(muestra)
# Estadístico de prueba
chiest <- (n-1)*S2/sigma2H0
## Regla de decisión
#CHI ~ chi^2_{n-1}
#p-valor = 2*min{P(CHI>chiest),P(CHI<chiest)}
pval<- 2*min(pchisq(chiest, df=n-1, lower.tail = F), #derecha
pchisq(chiest, df=n-1, lower.tail = T)) #izquierda
#Regla de decisión
if(pval<alpha){
print(paste0("Se rechaza H0 con significancia del ",100*alpha,"%"))
} else print("No se rechaza H0")
##############################################
##############################################
##### PRUEBA DE HIPÓTESIS PARA VARIANZA ######
# se quiere probar H0:sigma^2=8 vs H1:sigma^2 \neq 8
# Parámetros generales
sigma2H0 <- 9
alpha <- 0.05
n <- 50
# generamos la muestra
muestra <- rnorm(n, mean=65, sd= sqrt(10))
# Desviación muestral
S2 <- sd(muestra)
# Estadístico de prueba
chiest <- (n-1)*S2/sigma2H0
test(9,50,0.05)
test<- function(sigma2H0,alpha,n){
# generamos la muestra
muestra <- rnorm(n, mean=65, sd= sqrt(10))
# Desviación muestral
S2 <- sd(muestra)
# Estadístico de prueba
chiest <- (n-1)*S2/sigma2H0
## Regla de decisión
#CHI ~ chi^2_{n-1}
#p-valor = 2*min{P(CHI>chiest),P(CHI<chiest)}
pval<- 2*min(pchisq(chiest, df=n-1, lower.tail = F), #derecha
pchisq(chiest, df=n-1, lower.tail = T)) #izquierda
#Regla de decisión
if(pval<alpha){
print(paste0("Se rechaza H0 con significancia del ",100*alpha,"%"))
} else print("No se rechaza H0")
}
test(9,50,0.05)
#Regla de decisión
if(pval<alpha){
return(paste0("Se rechaza H0 con significancia del ",100*alpha,"%"))
} else return("No se rechaza H0")
test<- function(sigma2H0,alpha,n){
# generamos la muestra
muestra <- rnorm(n, mean=65, sd= sqrt(10))
# Desviación muestral
S2 <- sd(muestra)
# Estadístico de prueba
chiest <- (n-1)*S2/sigma2H0
## Regla de decisión
#CHI ~ chi^2_{n-1}
#p-valor = 2*min{P(CHI>chiest),P(CHI<chiest)}
pval<- 2*min(c(pchisq(chiest, df=n-1, lower.tail = F), #derecha
pchisq(chiest, df=n-1, lower.tail = T))) #izquierda
#Regla de decisión
if(pval<alpha){
return(paste0("Se rechaza H0 con significancia del ",100*alpha,"%"))
} else return("No se rechaza H0")
}
test(9,50,0.05)
test(9,0.05,50)
test(9,0.05,50)
test(9,0.01,50)
test(sqrt(10),0.01,50)
test(sqrt(10),0.05,50)
test(sqrt(10)+0.005,0.05,50)
test(sqrt(10)+0.05,0.05,50)
test(sqrt(10)+0.5,0.05,50)
test(sqrt(10)+0.5,0.01,50)
test(sqrt(10)+0.5,0.1,50)
test(sqrt(10)+0.5,0.2,50)
test(sqrt(10)+0.5,0.3,50)
test(sqrt(10)+0.5,0.05,50)
test(sqrt(10)+0.5,0.05,50)
test(10,0.05,50)
test(5,0.05,50)
test(2,0.05,50)
test(3,0.05,50)
test(3,0.05,50)
test(3,0.05,200)
test(3,0.05,2000)
test(3,0.05,20000)
qnorm(0.05, mean=0, sd=1, lower.tail = FALSE)
qnorm(0.01, lower.tail=FALSE)
qnorm(0.25, lower.tail=FALSE)
qnorm(0.05, mean=50, sd=10, lower.tail = FALSE)
x<- rchisq(1000000, df=20)
plot(density(x))
qchisq(0.05, df=10)
qchisq(0.05, df=10, lower.tail = F)
qchisq(0.95, df=10, lower.tail = F)
qnorm(0.05, mean=0, sd=1, lower.tail = FALSE)
qt(0.05, df=20)
qt(0.05, df=20, lower.tail = FALSE)
qt(0.05, df=30, lower.tail = FALSE)
qt(0.05, df=50, lower.tail = FALSE)
qt(0.05, df=100, lower.tail = FALSE)
qt(0.05, df=100, lower.tail = FALSE)
qt(0.05, df=1000, lower.tail = FALSE)
qt(0.05, df=10000, lower.tail = FALSE)
qt(0.05, df=100000, lower.tail = FALSE)
qt(0.05, df=1000000, lower.tail = FALSE)
qnorm(0.05, mean=0, sd=1, lower.tail = FALSE)
y <- rf(1000000, df1=20, df2=10)
plot(density(y))
qf(0.05, df1=10, df2=5,lower.tail = F)
qf(0.05, df1=10, df2=5,lower.tail = F)
qf(0.05, df1=5, df2=10,lower.tail = F)
qf(0.05, df1=20, df2=30,lower.tail = F)
qf(0.95, df1=30, df2=20,lower.tail = F)
1/qf(0.95, df1=30, df2=20,lower.tail = F)
qf(0.05, df1=20, df2=30,lower.tail = F)
1/qf(0.95, df1=30, df2=20,lower.tail = F)
plot(density(y), xlim=c(0,10))
plot(density(y), xlim=c(0,6))
qf(0.05, df1=20, df2=10, lower.tail = F)
plot(density(y), xlim=c(0,6))
qf(0.05, df1=20, df2=10, lower.tail = F)
qf(0.1, df1=20, df2=10, lower.tail = F)
qf(0.2, df1=20, df2=10, lower.tail = F)
qf(0.5, df1=20, df2=10, lower.tail = F)
qf(0.95, df1=20, df2=10, lower.tail = F)
par(mfrow=c(2,2))
y <- rf(1000000, df1=20, df2=10)
plot(density(y), xlim=c(0,6))
y <- rf(1000000, df1=10, df2=20)
plot(density(y), xlim=c(0,6))
y <- rf(1000000, df1=5, df2=100)
plot(density(y), xlim=c(0,6))
y <- rf(1000000, df1=100, df2=5)
plot(density(y), xlim=c(0,6))
pchisq(23.75, df=19, lower.tail = T)
pt(-2.5, df=48, lower.tail = T)
14^2*(2*1.64)^2/36
plot(x, y)
#
x <- c(-2,-1,0,1,2)
y <- c(0,0,1,1,3)
plot(x, y)
abline(ajuste)
## lm función para hacer regresión lineal
ajuste <- lm(y~x)
abline(ajuste)
ajuste
summary(ajuste)
##
n <- 99
alpha <- 0.05
s2<- 20
(LI <- (n-1)*S2/qchisq(alpha/2, df=n-1, lower.tail = F))
(LS <- (n-1)*S2/qchisq(1-alpha/2, df=n-1, lower.tail = F))
##
n <- 99
alpha <- 0.05
S2<- 20
(LI <- (n-1)*S2/qchisq(alpha/2, df=n-1, lower.tail = F))
(LS <- (n-1)*S2/qchisq(1-alpha/2, df=n-1, lower.tail = F))
(LS <- (n-1)*S2/qchisq(1-alpha/2, df=n-1, lower.tail = F))
(LI <- sqrt((n-1)*S2/qchisq(alpha/2, df=n-1, lower.tail = F)))
(LS <- sqrt((n-1)*S2/qchisq(1-alpha/2, df=n-1, lower.tail = F)))
install.packages(c("data.table", "digest", "R6"))
install.packages("rlang")
devtools::install_github("kassmbara/datarium")
install.packages("devtools")
library(devtools)
devtools::install_github("kassmbara/datarium")
devtools::install_github("kassambara/datarium")
data("marketing", package = "datarium")
head(marketing, 4)
summary(modelo)
modelo <- lm(sales ~ youtube + facebook + newspaper, data = marketing)
summary(modelo)
summary(modelo2)
modelo2  <- lm(sales ~ youtube + facebook, data = marketing)
summary(modelo2)
marketing
library(broom)      # tidy model output
library(tidyverse)  # data loading, manipulation and plotting
library(carData)    # Salary dataset
library(broom)      # tidy model output
install.packages("tidyverse", "carData", "broom")
install.packages(c("tidyverse", "carData", "broom"))
library(tidyverse)  # data loading, manipulation and plotting
library(carData)    # Salary dataset
library(broom)      # tidy model output
glimpse(Salaries)
unos<-matrix(c(1,1,1,1),ncol=1,nrow=16)
transunos<-matrix(c(1,1,1,1),ncol=16,nrow=1)
transunos
unos
COV_PORT1_PERIOD1<-matrix(rnorm(16*16), nrow=16, ncol=16)
COV_PORT1_PERIOD1
rep(1,16)
COV_PORT1_PERIOD1<-matrix(rnorm(16*16), nrow=16, ncol=16)
inversa<-solve(COV_PORT1_PERIOD1)
unos<-matrix(rep(1,16),ncol=1,nrow=16)
transunos<-matrix(rep(1,16),ncol=16,nrow=1)
t(unos)%*%inversa%*%unos
qnorm(0.025)
pnorm(3, lower.tail=F)
2*pnorm(3, lower.tail=F)
rnorm(10, mean=15, sd=3)
x<- c(16.93635,11.56855,15.76690,20.13105,12.52191,20.35300,14.46322,14.28217,14.75421,12.74792)
mean(x)
sd(x)
x<- c(16.93635,11.56855,15.76690,20.13105,12.52191,20.35300,14.46322,14.28217,14.75421,12.74792)
mean(x)
sd(x)
(mean(x)-17)/(sd(x)/sqrt(10))
qt(-1.72, df=9, lower.tail = F)
qt(0.95, df=9, lower.tail = F)
pt(1.72, df=9, lower.tail = F)
x
x<- c(16.93635,11.56855,15.76690,20.13105,12.52191,20.35300,14.46322,14.28217,14.75421,12.74792)
sd(x)
pchisq(8.15, df=9)
pchisq(8.15, df=9, lower.tail=T)
pchisq(8.15, df=9, lower.tail=F)
min(pchisq(8.15, df=9, lower.tail=T), pchisq(8.15, df=9, lower.tail=F))
2*min(pchisq(8.15, df=9, lower.tail=T), pchisq(8.15, df=9, lower.tail=F))
setwd("C:/Users/Windows/Google Drive/U libertadores/2020.2/Análisis de Regresión/Clases/Clase_3_Regresion_Simple")
head(base)
base <- read.csv('glassdoordata.csv')
head(base)
setwd("C:/Users/Windows/Google Drive/U libertadores/2020.2/Análisis de Regresión/Clases/Clase_3_Regresion_Simple")
base <- read.csv('glassdoordata.csv')
head(base)
setwd("C:/Users/Windows/Google Drive/U libertadores/2020.2/Análisis de Regresión/Clases/Clase_3_Regresion_Simple")
setwd("C:/Users/Windows/Google Drive/U libertadores/2020.2/Análisis de Regresión/Clases/Clase_3_Regresion_Simple")
base <- read.csv('glassdoordata.csv')
head(base)
setwd("C:/Users/Windows/Google Drive/U libertadores/2020.2/Análisis de Regresión/Clases/Clase_3_Regresion_Simple")
base <- read.csv('glassdoordata.csv')
head(base)
setwd("C:/Users/Windows/Google Drive/U libertadores/2020.2/Análisis de Regresión/Clases/Clase_3_Regresion_Simple")
base <- read.csv('glassdoordata.csv')
head(base)
setwd("C:/Users/Windows/Google Drive/U libertadores/2020.2/Análisis de Regresión/Clases/Clase_3_Regresion_Simple")
setwd("C:/Users/Windows/Google Drive/U libertadores/2020.2/Análisis de Regresión/Clases/Clase_3_Regresion_Simple")
base <- read.csv('glassdoordata.csv')
head(base)
